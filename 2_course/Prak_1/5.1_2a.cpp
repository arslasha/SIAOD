#include <iostream>   // Подключение библиотеки для работы с вводом-выводом в консоль
#include <vector>     // Подключение библиотеки для работы с динамическими массивами (векторами)
#include <bitset>     // Подключение библиотеки для работы с битовыми полями (для вывода маски в двоичном формате)
using namespace std;  // Использование стандартного пространства имен

int main() {  // Главная функция программы
    cout << "\e[1;1H\e[2J";  // Очистка консоли и установка курсора в начало (управляющая последовательность терминала)
    setlocale(LC_ALL, "ru");  // Установка локали на русский язык для корректного отображения русских символов

    cout << "Введите размер от 1 до 8: \n";  // Вывод подсказки пользователю о вводе размера
    int n, num;  // Объявление переменных `n` (для размера) и `num` (для ввода элементов)
    unsigned char mask = 0;  // Переменная `mask` для хранения итоговой маски, инициализируется как 0
    
    cin >> n;  // Чтение значения размера `n` с клавиатуры
    for (int i = 0; i < n; i++) {  // Цикл для ввода `n` элементов
        cout << "Введите элемент от 0 до 7: ";  // Вывод подсказки пользователю о вводе элемента
        cin >> num;  // Чтение введенного пользователем значения элемента
        mask |= (1 << num);  // Установка бита в `mask` на позиции `num` с помощью операции побитового ИЛИ и сдвига
    }
    
    cout << "Маска: " << bitset<8>(mask) << endl;  // Вывод маски в двоичном виде с помощью `bitset<8>`
    
    for (int i = 0; i < 8; i++) {  // Цикл для вывода всех установленных битов маски
        if ((mask & 1) == 1)  // Проверка младшего бита (если он равен 1, значит бит установлен)
            cout << i << " ";  // Вывод индекса установленного бита
        mask >>= 1;  // Сдвиг маски вправо на 1 бит для проверки следующего бита
    }
    
    cout << endl;  // Переход на новую строку после вывода всех установленных битов
}
