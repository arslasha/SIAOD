#include <iostream>   // Подключение библиотеки для ввода-вывода в консоль
#include <cstdlib>    // Подключение стандартной библиотеки C (для функции system)
#include <bitset>     // Подключение библиотеки для работы с битовыми полями
using namespace std;  // Использование стандартного пространства имен, чтобы не писать std:: перед стандартными объектами

int main() {  // Главная функция программы
    cout << "\e[1;1H\e[2J";  // Очистка консоли и установка курсора в начало (управляющая последовательность терминала)
    setlocale(LC_ALL, "ru");  // Установка локали на русский язык для корректного вывода сообщений на русском языке
    
    unsigned int x = 25;  // Объявление переменной `x` типа unsigned int и инициализация значением 25
    const int n = sizeof(int) * 8;  // Переменная `n` хранит размер типа `int` в битах (обычно 32), это будет количество битов в числе
    unsigned maska = (1 << (n - 1));  // Создание начальной маски, которая представляет старший бит числа (сдвиг 1 влево на 31 бит)
    
    cout << "Начальный вид маски: " << bitset<n>(maska) << endl;  // Вывод начальной маски в битовом виде с использованием `bitset`
    cout << "Результат: ";  // Вывод текста "Результат: "
    
    for (int i = 1; i <= n; i++) {  // Цикл от 1 до количества битов (n), используется для побитовой обработки числа `x`
        cout << ((x & maska) >> (n - i));  // Вывод текущего бита числа `x`, используя побитовую операцию И с маской и сдвиг вправо
        maska = maska >> 1;  // Сдвиг маски вправо на 1 бит для анализа следующего бита числа
    }
    
    cout << endl;  // Переход на новую строку после вывода результата

    return 0;  // Завершение программы
}
